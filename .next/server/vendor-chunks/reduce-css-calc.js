/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/reduce-css-calc";
exports.ids = ["vendor-chunks/reduce-css-calc"];
exports.modules = {
  /***/ "(ssr)/./node_modules/reduce-css-calc/index.js":
    /*!***********************************************!*\
  !*** ./node_modules/reduce-css-calc/index.js ***!
  \***********************************************/
    /***/ (module, __unused_webpack_exports, __webpack_require__) => {
      eval(
        '/**\n * Module dependencies\n */\nvar balanced = __webpack_require__(/*! balanced-match */ "(ssr)/./node_modules/reduce-css-calc/node_modules/balanced-match/index.js")\nvar reduceFunctionCall = __webpack_require__(/*! reduce-function-call */ "(ssr)/./node_modules/reduce-function-call/index.js")\nvar mexp = __webpack_require__(/*! math-expression-evaluator */ "(ssr)/./node_modules/math-expression-evaluator/src/formula_evaluator.js")\n\n/**\n * Constantes\n */\nvar MAX_STACK = 100 // should be enough for a single calc()...\nvar NESTED_CALC_RE = /(\\+|\\-|\\*|\\\\|[^a-z]|)(\\s*)(\\()/g\n\n/**\n * Global variables\n */\nvar stack\n\n/**\n * Expose reduceCSSCalc plugin\n *\n * @type {Function}\n */\nmodule.exports = reduceCSSCalc\n\n/**\n * Reduce CSS calc() in a string, whenever it\'s possible\n *\n * @param {String} value css input\n */\nfunction reduceCSSCalc(value, decimalPrecision) {\n  stack = 0\n  decimalPrecision = Math.pow(10, decimalPrecision === undefined ? 5 : decimalPrecision)\n\n  // Allow calc() on multiple lines\n  value = value.replace(/\\n+/g, " ")\n\n  /**\n   * Evaluates an expression\n   *\n   * @param {String} expression\n   * @returns {String}\n   */\n  function evaluateExpression (expression, functionIdentifier, call) {\n    if (stack++ > MAX_STACK) {\n      stack = 0\n      throw new Error("Call stack overflow for " + call)\n    }\n\n    if (expression === "") {\n      throw new Error(functionIdentifier + "(): \'" + call + "\' must contain a non-whitespace string")\n    }\n\n    expression = evaluateNestedExpression(expression, call)\n\n    var units = getUnitsInExpression(expression)\n\n    // If the expression contains multiple units or CSS variables,\n    // then let the expression be (i.e. browser calc())\n    if (units.length > 1 || expression.indexOf("var(") > -1) {\n      return functionIdentifier + "(" + expression + ")"\n    }\n\n    var unit = units[0] || ""\n\n    if (unit === "%") {\n      // Convert percentages to numbers, to handle expressions like: 50% * 50% (will become: 25%):\n      // console.log(expression)\n      expression = expression.replace(/\\b[0-9\\.]+%/g, function(percent) {\n        return parseFloat(percent.slice(0, -1)) * 0.01\n      })\n    }\n\n    // Remove units in expression:\n    var toEvaluate = expression.replace(new RegExp(unit, "gi"), "")\n    var result\n\n    try {\n      result = mexp.eval(toEvaluate)\n    }\n    catch (e) {\n      return functionIdentifier + "(" + expression + ")"\n    }\n\n    // Transform back to a percentage result:\n    if (unit === "%") {\n      result *= 100\n    }\n\n    // adjust rounding shit\n    // (0.1 * 0.2 === 0.020000000000000004)\n    if (functionIdentifier.length || unit === "%") {\n      result = Math.round(result * decimalPrecision) / decimalPrecision\n    }\n\n    // Add unit\n    result += unit\n\n    return result\n  }\n\n  /**\n   * Evaluates nested expressions\n   *\n   * @param {String} expression\n   * @returns {String}\n   */\n  function evaluateNestedExpression(expression, call) {\n    // Remove the calc part from nested expressions to ensure\n    // better browser compatibility\n    expression = expression.replace(/((?:\\-[a-z]+\\-)?calc)/g, "")\n    var evaluatedPart = ""\n    var nonEvaluatedPart = expression\n    var matches\n    while ((matches = NESTED_CALC_RE.exec(nonEvaluatedPart))) {\n      if (matches[0].index > 0) {\n        evaluatedPart += nonEvaluatedPart.substring(0, matches[0].index)\n      }\n\n      var balancedExpr = balanced("(", ")", nonEvaluatedPart.substring([0].index))\n      if (balancedExpr.body === "") {\n        throw new Error("\'" + expression + "\' must contain a non-whitespace string")\n      }\n\n      var evaluated = evaluateExpression(balancedExpr.body, "", call)\n\n      evaluatedPart += balancedExpr.pre + evaluated\n      nonEvaluatedPart = balancedExpr.post\n    }\n\n    return evaluatedPart + nonEvaluatedPart\n  }\n\n  return reduceFunctionCall(value, /((?:\\-[a-z]+\\-)?calc)\\(/, evaluateExpression)\n}\n\n/**\n * Checks what units are used in an expression\n *\n * @param {String} expression\n * @returns {Array}\n */\n\nfunction getUnitsInExpression(expression) {\n  var uniqueUnits = []\n  var uniqueLowerCaseUnits = []\n  var unitRegEx = /[\\.0-9]([%a-z]+)/gi\n  var matches = unitRegEx.exec(expression)\n\n  while (matches) {\n    if (!matches || !matches[1]) {\n      continue\n    }\n\n    if (uniqueLowerCaseUnits.indexOf(matches[1].toLowerCase()) === -1) {\n      uniqueUnits.push(matches[1])\n      uniqueLowerCaseUnits.push(matches[1].toLowerCase())\n    }\n\n    matches = unitRegEx.exec(expression)\n  }\n\n  return uniqueUnits\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVkdWNlLWNzcy1jYWxjL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsbUJBQU8sQ0FBQyxpR0FBZ0I7QUFDdkMseUJBQXlCLG1CQUFPLENBQUMsZ0ZBQXNCO0FBQ3ZELFdBQVcsbUJBQU8sQ0FBQywwR0FBMkI7O0FBRTlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsYUFBYSxRQUFRO0FBQ3JCLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsUUFBUTtBQUNyQixlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLGFBQWE7QUFDYjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xhbmRpbmctcGFnZS8uL25vZGVfbW9kdWxlcy9yZWR1Y2UtY3NzLWNhbGMvaW5kZXguanM/NTNiZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIE1vZHVsZSBkZXBlbmRlbmNpZXNcbiAqL1xudmFyIGJhbGFuY2VkID0gcmVxdWlyZShcImJhbGFuY2VkLW1hdGNoXCIpXG52YXIgcmVkdWNlRnVuY3Rpb25DYWxsID0gcmVxdWlyZShcInJlZHVjZS1mdW5jdGlvbi1jYWxsXCIpXG52YXIgbWV4cCA9IHJlcXVpcmUoXCJtYXRoLWV4cHJlc3Npb24tZXZhbHVhdG9yXCIpXG5cbi8qKlxuICogQ29uc3RhbnRlc1xuICovXG52YXIgTUFYX1NUQUNLID0gMTAwIC8vIHNob3VsZCBiZSBlbm91Z2ggZm9yIGEgc2luZ2xlIGNhbGMoKS4uLlxudmFyIE5FU1RFRF9DQUxDX1JFID0gLyhcXCt8XFwtfFxcKnxcXFxcfFteYS16XXwpKFxccyopKFxcKCkvZ1xuXG4vKipcbiAqIEdsb2JhbCB2YXJpYWJsZXNcbiAqL1xudmFyIHN0YWNrXG5cbi8qKlxuICogRXhwb3NlIHJlZHVjZUNTU0NhbGMgcGx1Z2luXG4gKlxuICogQHR5cGUge0Z1bmN0aW9ufVxuICovXG5tb2R1bGUuZXhwb3J0cyA9IHJlZHVjZUNTU0NhbGNcblxuLyoqXG4gKiBSZWR1Y2UgQ1NTIGNhbGMoKSBpbiBhIHN0cmluZywgd2hlbmV2ZXIgaXQncyBwb3NzaWJsZVxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSB2YWx1ZSBjc3MgaW5wdXRcbiAqL1xuZnVuY3Rpb24gcmVkdWNlQ1NTQ2FsYyh2YWx1ZSwgZGVjaW1hbFByZWNpc2lvbikge1xuICBzdGFjayA9IDBcbiAgZGVjaW1hbFByZWNpc2lvbiA9IE1hdGgucG93KDEwLCBkZWNpbWFsUHJlY2lzaW9uID09PSB1bmRlZmluZWQgPyA1IDogZGVjaW1hbFByZWNpc2lvbilcblxuICAvLyBBbGxvdyBjYWxjKCkgb24gbXVsdGlwbGUgbGluZXNcbiAgdmFsdWUgPSB2YWx1ZS5yZXBsYWNlKC9cXG4rL2csIFwiIFwiKVxuXG4gIC8qKlxuICAgKiBFdmFsdWF0ZXMgYW4gZXhwcmVzc2lvblxuICAgKlxuICAgKiBAcGFyYW0ge1N0cmluZ30gZXhwcmVzc2lvblxuICAgKiBAcmV0dXJucyB7U3RyaW5nfVxuICAgKi9cbiAgZnVuY3Rpb24gZXZhbHVhdGVFeHByZXNzaW9uIChleHByZXNzaW9uLCBmdW5jdGlvbklkZW50aWZpZXIsIGNhbGwpIHtcbiAgICBpZiAoc3RhY2srKyA+IE1BWF9TVEFDSykge1xuICAgICAgc3RhY2sgPSAwXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJDYWxsIHN0YWNrIG92ZXJmbG93IGZvciBcIiArIGNhbGwpXG4gICAgfVxuXG4gICAgaWYgKGV4cHJlc3Npb24gPT09IFwiXCIpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihmdW5jdGlvbklkZW50aWZpZXIgKyBcIigpOiAnXCIgKyBjYWxsICsgXCInIG11c3QgY29udGFpbiBhIG5vbi13aGl0ZXNwYWNlIHN0cmluZ1wiKVxuICAgIH1cblxuICAgIGV4cHJlc3Npb24gPSBldmFsdWF0ZU5lc3RlZEV4cHJlc3Npb24oZXhwcmVzc2lvbiwgY2FsbClcblxuICAgIHZhciB1bml0cyA9IGdldFVuaXRzSW5FeHByZXNzaW9uKGV4cHJlc3Npb24pXG5cbiAgICAvLyBJZiB0aGUgZXhwcmVzc2lvbiBjb250YWlucyBtdWx0aXBsZSB1bml0cyBvciBDU1MgdmFyaWFibGVzLFxuICAgIC8vIHRoZW4gbGV0IHRoZSBleHByZXNzaW9uIGJlIChpLmUuIGJyb3dzZXIgY2FsYygpKVxuICAgIGlmICh1bml0cy5sZW5ndGggPiAxIHx8IGV4cHJlc3Npb24uaW5kZXhPZihcInZhcihcIikgPiAtMSkge1xuICAgICAgcmV0dXJuIGZ1bmN0aW9uSWRlbnRpZmllciArIFwiKFwiICsgZXhwcmVzc2lvbiArIFwiKVwiXG4gICAgfVxuXG4gICAgdmFyIHVuaXQgPSB1bml0c1swXSB8fCBcIlwiXG5cbiAgICBpZiAodW5pdCA9PT0gXCIlXCIpIHtcbiAgICAgIC8vIENvbnZlcnQgcGVyY2VudGFnZXMgdG8gbnVtYmVycywgdG8gaGFuZGxlIGV4cHJlc3Npb25zIGxpa2U6IDUwJSAqIDUwJSAod2lsbCBiZWNvbWU6IDI1JSk6XG4gICAgICAvLyBjb25zb2xlLmxvZyhleHByZXNzaW9uKVxuICAgICAgZXhwcmVzc2lvbiA9IGV4cHJlc3Npb24ucmVwbGFjZSgvXFxiWzAtOVxcLl0rJS9nLCBmdW5jdGlvbihwZXJjZW50KSB7XG4gICAgICAgIHJldHVybiBwYXJzZUZsb2F0KHBlcmNlbnQuc2xpY2UoMCwgLTEpKSAqIDAuMDFcbiAgICAgIH0pXG4gICAgfVxuXG4gICAgLy8gUmVtb3ZlIHVuaXRzIGluIGV4cHJlc3Npb246XG4gICAgdmFyIHRvRXZhbHVhdGUgPSBleHByZXNzaW9uLnJlcGxhY2UobmV3IFJlZ0V4cCh1bml0LCBcImdpXCIpLCBcIlwiKVxuICAgIHZhciByZXN1bHRcblxuICAgIHRyeSB7XG4gICAgICByZXN1bHQgPSBtZXhwLmV2YWwodG9FdmFsdWF0ZSlcbiAgICB9XG4gICAgY2F0Y2ggKGUpIHtcbiAgICAgIHJldHVybiBmdW5jdGlvbklkZW50aWZpZXIgKyBcIihcIiArIGV4cHJlc3Npb24gKyBcIilcIlxuICAgIH1cblxuICAgIC8vIFRyYW5zZm9ybSBiYWNrIHRvIGEgcGVyY2VudGFnZSByZXN1bHQ6XG4gICAgaWYgKHVuaXQgPT09IFwiJVwiKSB7XG4gICAgICByZXN1bHQgKj0gMTAwXG4gICAgfVxuXG4gICAgLy8gYWRqdXN0IHJvdW5kaW5nIHNoaXRcbiAgICAvLyAoMC4xICogMC4yID09PSAwLjAyMDAwMDAwMDAwMDAwMDAwNClcbiAgICBpZiAoZnVuY3Rpb25JZGVudGlmaWVyLmxlbmd0aCB8fCB1bml0ID09PSBcIiVcIikge1xuICAgICAgcmVzdWx0ID0gTWF0aC5yb3VuZChyZXN1bHQgKiBkZWNpbWFsUHJlY2lzaW9uKSAvIGRlY2ltYWxQcmVjaXNpb25cbiAgICB9XG5cbiAgICAvLyBBZGQgdW5pdFxuICAgIHJlc3VsdCArPSB1bml0XG5cbiAgICByZXR1cm4gcmVzdWx0XG4gIH1cblxuICAvKipcbiAgICogRXZhbHVhdGVzIG5lc3RlZCBleHByZXNzaW9uc1xuICAgKlxuICAgKiBAcGFyYW0ge1N0cmluZ30gZXhwcmVzc2lvblxuICAgKiBAcmV0dXJucyB7U3RyaW5nfVxuICAgKi9cbiAgZnVuY3Rpb24gZXZhbHVhdGVOZXN0ZWRFeHByZXNzaW9uKGV4cHJlc3Npb24sIGNhbGwpIHtcbiAgICAvLyBSZW1vdmUgdGhlIGNhbGMgcGFydCBmcm9tIG5lc3RlZCBleHByZXNzaW9ucyB0byBlbnN1cmVcbiAgICAvLyBiZXR0ZXIgYnJvd3NlciBjb21wYXRpYmlsaXR5XG4gICAgZXhwcmVzc2lvbiA9IGV4cHJlc3Npb24ucmVwbGFjZSgvKCg/OlxcLVthLXpdK1xcLSk/Y2FsYykvZywgXCJcIilcbiAgICB2YXIgZXZhbHVhdGVkUGFydCA9IFwiXCJcbiAgICB2YXIgbm9uRXZhbHVhdGVkUGFydCA9IGV4cHJlc3Npb25cbiAgICB2YXIgbWF0Y2hlc1xuICAgIHdoaWxlICgobWF0Y2hlcyA9IE5FU1RFRF9DQUxDX1JFLmV4ZWMobm9uRXZhbHVhdGVkUGFydCkpKSB7XG4gICAgICBpZiAobWF0Y2hlc1swXS5pbmRleCA+IDApIHtcbiAgICAgICAgZXZhbHVhdGVkUGFydCArPSBub25FdmFsdWF0ZWRQYXJ0LnN1YnN0cmluZygwLCBtYXRjaGVzWzBdLmluZGV4KVxuICAgICAgfVxuXG4gICAgICB2YXIgYmFsYW5jZWRFeHByID0gYmFsYW5jZWQoXCIoXCIsIFwiKVwiLCBub25FdmFsdWF0ZWRQYXJ0LnN1YnN0cmluZyhbMF0uaW5kZXgpKVxuICAgICAgaWYgKGJhbGFuY2VkRXhwci5ib2R5ID09PSBcIlwiKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIidcIiArIGV4cHJlc3Npb24gKyBcIicgbXVzdCBjb250YWluIGEgbm9uLXdoaXRlc3BhY2Ugc3RyaW5nXCIpXG4gICAgICB9XG5cbiAgICAgIHZhciBldmFsdWF0ZWQgPSBldmFsdWF0ZUV4cHJlc3Npb24oYmFsYW5jZWRFeHByLmJvZHksIFwiXCIsIGNhbGwpXG5cbiAgICAgIGV2YWx1YXRlZFBhcnQgKz0gYmFsYW5jZWRFeHByLnByZSArIGV2YWx1YXRlZFxuICAgICAgbm9uRXZhbHVhdGVkUGFydCA9IGJhbGFuY2VkRXhwci5wb3N0XG4gICAgfVxuXG4gICAgcmV0dXJuIGV2YWx1YXRlZFBhcnQgKyBub25FdmFsdWF0ZWRQYXJ0XG4gIH1cblxuICByZXR1cm4gcmVkdWNlRnVuY3Rpb25DYWxsKHZhbHVlLCAvKCg/OlxcLVthLXpdK1xcLSk/Y2FsYylcXCgvLCBldmFsdWF0ZUV4cHJlc3Npb24pXG59XG5cbi8qKlxuICogQ2hlY2tzIHdoYXQgdW5pdHMgYXJlIHVzZWQgaW4gYW4gZXhwcmVzc2lvblxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBleHByZXNzaW9uXG4gKiBAcmV0dXJucyB7QXJyYXl9XG4gKi9cblxuZnVuY3Rpb24gZ2V0VW5pdHNJbkV4cHJlc3Npb24oZXhwcmVzc2lvbikge1xuICB2YXIgdW5pcXVlVW5pdHMgPSBbXVxuICB2YXIgdW5pcXVlTG93ZXJDYXNlVW5pdHMgPSBbXVxuICB2YXIgdW5pdFJlZ0V4ID0gL1tcXC4wLTldKFslYS16XSspL2dpXG4gIHZhciBtYXRjaGVzID0gdW5pdFJlZ0V4LmV4ZWMoZXhwcmVzc2lvbilcblxuICB3aGlsZSAobWF0Y2hlcykge1xuICAgIGlmICghbWF0Y2hlcyB8fCAhbWF0Y2hlc1sxXSkge1xuICAgICAgY29udGludWVcbiAgICB9XG5cbiAgICBpZiAodW5pcXVlTG93ZXJDYXNlVW5pdHMuaW5kZXhPZihtYXRjaGVzWzFdLnRvTG93ZXJDYXNlKCkpID09PSAtMSkge1xuICAgICAgdW5pcXVlVW5pdHMucHVzaChtYXRjaGVzWzFdKVxuICAgICAgdW5pcXVlTG93ZXJDYXNlVW5pdHMucHVzaChtYXRjaGVzWzFdLnRvTG93ZXJDYXNlKCkpXG4gICAgfVxuXG4gICAgbWF0Y2hlcyA9IHVuaXRSZWdFeC5leGVjKGV4cHJlc3Npb24pXG4gIH1cblxuICByZXR1cm4gdW5pcXVlVW5pdHNcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/reduce-css-calc/index.js\n',
      );

      /***/
    },

  /***/ "(ssr)/./node_modules/reduce-css-calc/node_modules/balanced-match/index.js":
    /*!***************************************************************************!*\
  !*** ./node_modules/reduce-css-calc/node_modules/balanced-match/index.js ***!
  \***************************************************************************/
    /***/ (module) => {
      eval(
        "module.exports = balanced;\nfunction balanced(a, b, str) {\n  if (a instanceof RegExp) a = maybeMatch(a, str);\n  if (b instanceof RegExp) b = maybeMatch(b, str);\n\n  var r = range(a, b, str);\n\n  return r && {\n    start: r[0],\n    end: r[1],\n    pre: str.slice(0, r[0]),\n    body: str.slice(r[0] + a.length, r[1]),\n    post: str.slice(r[1] + b.length)\n  };\n}\n\nfunction maybeMatch(reg, str) {\n  var m = str.match(reg);\n  return m ? m[0] : null;\n}\n\nbalanced.range = range;\nfunction range(a, b, str) {\n  var begs, beg, left, right, result;\n  var ai = str.indexOf(a);\n  var bi = str.indexOf(b, ai + 1);\n  var i = ai;\n\n  if (ai >= 0 && bi > 0) {\n    begs = [];\n    left = str.length;\n\n    while (i >= 0 && !result) {\n      if (i == ai) {\n        begs.push(i);\n        ai = str.indexOf(a, i + 1);\n      } else if (begs.length == 1) {\n        result = [ begs.pop(), bi ];\n      } else {\n        beg = begs.pop();\n        if (beg < left) {\n          left = beg;\n          right = bi;\n        }\n\n        bi = str.indexOf(b, i + 1);\n      }\n\n      i = ai < bi && ai >= 0 ? ai : bi;\n    }\n\n    if (begs.length) {\n      result = [ left, right ];\n    }\n  }\n\n  return result;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVkdWNlLWNzcy1jYWxjL25vZGVfbW9kdWxlcy9iYWxhbmNlZC1tYXRjaC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xhbmRpbmctcGFnZS8uL25vZGVfbW9kdWxlcy9yZWR1Y2UtY3NzLWNhbGMvbm9kZV9tb2R1bGVzL2JhbGFuY2VkLW1hdGNoL2luZGV4LmpzPzIwMDQiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBiYWxhbmNlZDtcbmZ1bmN0aW9uIGJhbGFuY2VkKGEsIGIsIHN0cikge1xuICBpZiAoYSBpbnN0YW5jZW9mIFJlZ0V4cCkgYSA9IG1heWJlTWF0Y2goYSwgc3RyKTtcbiAgaWYgKGIgaW5zdGFuY2VvZiBSZWdFeHApIGIgPSBtYXliZU1hdGNoKGIsIHN0cik7XG5cbiAgdmFyIHIgPSByYW5nZShhLCBiLCBzdHIpO1xuXG4gIHJldHVybiByICYmIHtcbiAgICBzdGFydDogclswXSxcbiAgICBlbmQ6IHJbMV0sXG4gICAgcHJlOiBzdHIuc2xpY2UoMCwgclswXSksXG4gICAgYm9keTogc3RyLnNsaWNlKHJbMF0gKyBhLmxlbmd0aCwgclsxXSksXG4gICAgcG9zdDogc3RyLnNsaWNlKHJbMV0gKyBiLmxlbmd0aClcbiAgfTtcbn1cblxuZnVuY3Rpb24gbWF5YmVNYXRjaChyZWcsIHN0cikge1xuICB2YXIgbSA9IHN0ci5tYXRjaChyZWcpO1xuICByZXR1cm4gbSA/IG1bMF0gOiBudWxsO1xufVxuXG5iYWxhbmNlZC5yYW5nZSA9IHJhbmdlO1xuZnVuY3Rpb24gcmFuZ2UoYSwgYiwgc3RyKSB7XG4gIHZhciBiZWdzLCBiZWcsIGxlZnQsIHJpZ2h0LCByZXN1bHQ7XG4gIHZhciBhaSA9IHN0ci5pbmRleE9mKGEpO1xuICB2YXIgYmkgPSBzdHIuaW5kZXhPZihiLCBhaSArIDEpO1xuICB2YXIgaSA9IGFpO1xuXG4gIGlmIChhaSA+PSAwICYmIGJpID4gMCkge1xuICAgIGJlZ3MgPSBbXTtcbiAgICBsZWZ0ID0gc3RyLmxlbmd0aDtcblxuICAgIHdoaWxlIChpID49IDAgJiYgIXJlc3VsdCkge1xuICAgICAgaWYgKGkgPT0gYWkpIHtcbiAgICAgICAgYmVncy5wdXNoKGkpO1xuICAgICAgICBhaSA9IHN0ci5pbmRleE9mKGEsIGkgKyAxKTtcbiAgICAgIH0gZWxzZSBpZiAoYmVncy5sZW5ndGggPT0gMSkge1xuICAgICAgICByZXN1bHQgPSBbIGJlZ3MucG9wKCksIGJpIF07XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBiZWcgPSBiZWdzLnBvcCgpO1xuICAgICAgICBpZiAoYmVnIDwgbGVmdCkge1xuICAgICAgICAgIGxlZnQgPSBiZWc7XG4gICAgICAgICAgcmlnaHQgPSBiaTtcbiAgICAgICAgfVxuXG4gICAgICAgIGJpID0gc3RyLmluZGV4T2YoYiwgaSArIDEpO1xuICAgICAgfVxuXG4gICAgICBpID0gYWkgPCBiaSAmJiBhaSA+PSAwID8gYWkgOiBiaTtcbiAgICB9XG5cbiAgICBpZiAoYmVncy5sZW5ndGgpIHtcbiAgICAgIHJlc3VsdCA9IFsgbGVmdCwgcmlnaHQgXTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gcmVzdWx0O1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/reduce-css-calc/node_modules/balanced-match/index.js\n",
      );

      /***/
    },
};
