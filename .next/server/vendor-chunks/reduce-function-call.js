/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/reduce-function-call";
exports.ids = ["vendor-chunks/reduce-function-call"];
exports.modules = {
  /***/ "(ssr)/./node_modules/reduce-function-call/index.js":
    /*!****************************************************!*\
  !*** ./node_modules/reduce-function-call/index.js ***!
  \****************************************************/
    /***/ (module, __unused_webpack_exports, __webpack_require__) => {
      eval(
        '/*\n * Module dependencies\n */\nvar balanced = __webpack_require__(/*! balanced-match */ "(ssr)/./node_modules/balanced-match/index.js")\n\n/**\n * Expose `reduceFunctionCall`\n *\n * @type {Function}\n */\nmodule.exports = reduceFunctionCall\n\n/**\n * Walkthrough all expressions, evaluate them and insert them into the declaration\n *\n * @param {Array} expressions\n * @param {Object} declaration\n */\n\nfunction reduceFunctionCall(string, functionRE, callback) {\n  var call = string\n  return getFunctionCalls(string, functionRE).reduce(function(string, obj) {\n    return string.replace(obj.functionIdentifier + "(" + obj.matches.body + ")", evalFunctionCall(obj.matches.body, obj.functionIdentifier, callback, call, functionRE))\n  }, string)\n}\n\n/**\n * Parses expressions in a value\n *\n * @param {String} value\n * @returns {Array}\n * @api private\n */\n\nfunction getFunctionCalls(call, functionRE) {\n  var expressions = []\n\n  var fnRE = typeof functionRE === "string" ? new RegExp("\\\\b(" + functionRE + ")\\\\(") : functionRE\n  do {\n    var searchMatch = fnRE.exec(call)\n    if (!searchMatch) {\n      return expressions\n    }\n    if (searchMatch[1] === undefined) {\n      throw new Error("Missing the first couple of parenthesis to get the function identifier in " + functionRE)\n    }\n    var fn = searchMatch[1]\n    var startIndex = searchMatch.index\n    var matches = balanced("(", ")", call.substring(startIndex))\n\n    if (!matches || matches.start !== searchMatch[0].length - 1) {\n      throw new SyntaxError(fn + "(): missing closing \')\' in the value \'" + call + "\'")\n    }\n\n    expressions.push({matches: matches, functionIdentifier: fn})\n    call = matches.post\n  }\n  while (fnRE.test(call))\n\n  return expressions\n}\n\n/**\n * Evaluates an expression\n *\n * @param {String} expression\n * @returns {String}\n * @api private\n */\n\nfunction evalFunctionCall (string, functionIdentifier, callback, call, functionRE) {\n  // allow recursivity\n  return callback(reduceFunctionCall(string, functionRE, callback), functionIdentifier, call)\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVkdWNlLWZ1bmN0aW9uLWNhbGwvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0EsZUFBZSxtQkFBTyxDQUFDLG9FQUFnQjs7QUFFdkM7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLFdBQVcsUUFBUTtBQUNuQjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsYUFBYTtBQUNiO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBLHNCQUFzQix5Q0FBeUM7QUFDL0Q7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLGFBQWE7QUFDYjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGFuZGluZy1wYWdlLy4vbm9kZV9tb2R1bGVzL3JlZHVjZS1mdW5jdGlvbi1jYWxsL2luZGV4LmpzP2YzNjAiXSwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIE1vZHVsZSBkZXBlbmRlbmNpZXNcbiAqL1xudmFyIGJhbGFuY2VkID0gcmVxdWlyZShcImJhbGFuY2VkLW1hdGNoXCIpXG5cbi8qKlxuICogRXhwb3NlIGByZWR1Y2VGdW5jdGlvbkNhbGxgXG4gKlxuICogQHR5cGUge0Z1bmN0aW9ufVxuICovXG5tb2R1bGUuZXhwb3J0cyA9IHJlZHVjZUZ1bmN0aW9uQ2FsbFxuXG4vKipcbiAqIFdhbGt0aHJvdWdoIGFsbCBleHByZXNzaW9ucywgZXZhbHVhdGUgdGhlbSBhbmQgaW5zZXJ0IHRoZW0gaW50byB0aGUgZGVjbGFyYXRpb25cbiAqXG4gKiBAcGFyYW0ge0FycmF5fSBleHByZXNzaW9uc1xuICogQHBhcmFtIHtPYmplY3R9IGRlY2xhcmF0aW9uXG4gKi9cblxuZnVuY3Rpb24gcmVkdWNlRnVuY3Rpb25DYWxsKHN0cmluZywgZnVuY3Rpb25SRSwgY2FsbGJhY2spIHtcbiAgdmFyIGNhbGwgPSBzdHJpbmdcbiAgcmV0dXJuIGdldEZ1bmN0aW9uQ2FsbHMoc3RyaW5nLCBmdW5jdGlvblJFKS5yZWR1Y2UoZnVuY3Rpb24oc3RyaW5nLCBvYmopIHtcbiAgICByZXR1cm4gc3RyaW5nLnJlcGxhY2Uob2JqLmZ1bmN0aW9uSWRlbnRpZmllciArIFwiKFwiICsgb2JqLm1hdGNoZXMuYm9keSArIFwiKVwiLCBldmFsRnVuY3Rpb25DYWxsKG9iai5tYXRjaGVzLmJvZHksIG9iai5mdW5jdGlvbklkZW50aWZpZXIsIGNhbGxiYWNrLCBjYWxsLCBmdW5jdGlvblJFKSlcbiAgfSwgc3RyaW5nKVxufVxuXG4vKipcbiAqIFBhcnNlcyBleHByZXNzaW9ucyBpbiBhIHZhbHVlXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IHZhbHVlXG4gKiBAcmV0dXJucyB7QXJyYXl9XG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5mdW5jdGlvbiBnZXRGdW5jdGlvbkNhbGxzKGNhbGwsIGZ1bmN0aW9uUkUpIHtcbiAgdmFyIGV4cHJlc3Npb25zID0gW11cblxuICB2YXIgZm5SRSA9IHR5cGVvZiBmdW5jdGlvblJFID09PSBcInN0cmluZ1wiID8gbmV3IFJlZ0V4cChcIlxcXFxiKFwiICsgZnVuY3Rpb25SRSArIFwiKVxcXFwoXCIpIDogZnVuY3Rpb25SRVxuICBkbyB7XG4gICAgdmFyIHNlYXJjaE1hdGNoID0gZm5SRS5leGVjKGNhbGwpXG4gICAgaWYgKCFzZWFyY2hNYXRjaCkge1xuICAgICAgcmV0dXJuIGV4cHJlc3Npb25zXG4gICAgfVxuICAgIGlmIChzZWFyY2hNYXRjaFsxXSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJNaXNzaW5nIHRoZSBmaXJzdCBjb3VwbGUgb2YgcGFyZW50aGVzaXMgdG8gZ2V0IHRoZSBmdW5jdGlvbiBpZGVudGlmaWVyIGluIFwiICsgZnVuY3Rpb25SRSlcbiAgICB9XG4gICAgdmFyIGZuID0gc2VhcmNoTWF0Y2hbMV1cbiAgICB2YXIgc3RhcnRJbmRleCA9IHNlYXJjaE1hdGNoLmluZGV4XG4gICAgdmFyIG1hdGNoZXMgPSBiYWxhbmNlZChcIihcIiwgXCIpXCIsIGNhbGwuc3Vic3RyaW5nKHN0YXJ0SW5kZXgpKVxuXG4gICAgaWYgKCFtYXRjaGVzIHx8IG1hdGNoZXMuc3RhcnQgIT09IHNlYXJjaE1hdGNoWzBdLmxlbmd0aCAtIDEpIHtcbiAgICAgIHRocm93IG5ldyBTeW50YXhFcnJvcihmbiArIFwiKCk6IG1pc3NpbmcgY2xvc2luZyAnKScgaW4gdGhlIHZhbHVlICdcIiArIGNhbGwgKyBcIidcIilcbiAgICB9XG5cbiAgICBleHByZXNzaW9ucy5wdXNoKHttYXRjaGVzOiBtYXRjaGVzLCBmdW5jdGlvbklkZW50aWZpZXI6IGZufSlcbiAgICBjYWxsID0gbWF0Y2hlcy5wb3N0XG4gIH1cbiAgd2hpbGUgKGZuUkUudGVzdChjYWxsKSlcblxuICByZXR1cm4gZXhwcmVzc2lvbnNcbn1cblxuLyoqXG4gKiBFdmFsdWF0ZXMgYW4gZXhwcmVzc2lvblxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBleHByZXNzaW9uXG4gKiBAcmV0dXJucyB7U3RyaW5nfVxuICogQGFwaSBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gZXZhbEZ1bmN0aW9uQ2FsbCAoc3RyaW5nLCBmdW5jdGlvbklkZW50aWZpZXIsIGNhbGxiYWNrLCBjYWxsLCBmdW5jdGlvblJFKSB7XG4gIC8vIGFsbG93IHJlY3Vyc2l2aXR5XG4gIHJldHVybiBjYWxsYmFjayhyZWR1Y2VGdW5jdGlvbkNhbGwoc3RyaW5nLCBmdW5jdGlvblJFLCBjYWxsYmFjayksIGZ1bmN0aW9uSWRlbnRpZmllciwgY2FsbClcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/reduce-function-call/index.js\n',
      );

      /***/
    },
};
