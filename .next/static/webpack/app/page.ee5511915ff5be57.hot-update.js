/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page", {
  /***/ "(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Faluaorazbek%2FDesktop%2Fcharts%2Fsrc%2Fcomponents%2Fline-chart.tsx%22%2C%22ids%22%3A%5B%22default%22%5D%7D&server=false!":
    /*!***********************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Faluaorazbek%2FDesktop%2Fcharts%2Fsrc%2Fcomponents%2Fline-chart.tsx%22%2C%22ids%22%3A%5B%22default%22%5D%7D&server=false! ***!
  \***********************************************************************************************************************************************************************************************************************************************************/
    /***/ function (
      __unused_webpack_module,
      __unused_webpack_exports,
      __webpack_require__,
    ) {
      eval(
        __webpack_require__.ts(
          'Promise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./src/components/line-chart.tsx */ "(app-pages-browser)/./src/components/line-chart.tsx", 23));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtZmxpZ2h0LWNsaWVudC1lbnRyeS1sb2FkZXIuanM/bW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyJTJGVXNlcnMlMkZhbHVhb3JhemJlayUyRkRlc2t0b3AlMkZjaGFydHMlMkZzcmMlMkZjb21wb25lbnRzJTJGbGluZS1jaGFydC50c3glMjIlMkMlMjJpZHMlMjIlM0ElNUIlMjJkZWZhdWx0JTIyJTVEJTdEJnNlcnZlcj1mYWxzZSEiLCJtYXBwaW5ncyI6IkFBQUEsOExBQWlJIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8/ODE2YSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiwgd2VicGFja0V4cG9ydHM6IFtcImRlZmF1bHRcIl0gKi8gXCIvVXNlcnMvYWx1YW9yYXpiZWsvRGVza3RvcC9jaGFydHMvc3JjL2NvbXBvbmVudHMvbGluZS1jaGFydC50c3hcIik7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Faluaorazbek%2FDesktop%2Fcharts%2Fsrc%2Fcomponents%2Fline-chart.tsx%22%2C%22ids%22%3A%5B%22default%22%5D%7D&server=false!\n',
        ),
      );

      /***/
    },

  /***/ "(app-pages-browser)/./src/components/line-chart.tsx":
    /*!***************************************!*\
  !*** ./src/components/line-chart.tsx ***!
  \***************************************/
    /***/ function (module, __unused_webpack_exports, __webpack_require__) {
      eval(
        __webpack_require__.ts(
          "// 'use client'\n// import React, { useMemo, useCallback } from 'react';\n// import { extent, bisector } from 'd3-array';\n// import { timeFormat } from 'd3-time-format';\n// import { AxisBottom, AxisRight } from '@visx/axis';\n// import { LinePath, Bar } from '@visx/shape';\n// import { Group } from '@visx/group';\n// import { scaleLinear, scaleTime } from '@visx/scale';\n// import { GridRows } from \"@visx/grid\";\n// import { curveLinear } from '@visx/curve';\n// import { withTooltip, TooltipWithBounds, defaultStyles } from '@visx/tooltip';\n// import { localPoint } from '@visx/event';\n// import { data } from '../data/line-chart';\n// import { getDimensions, xAccessor, yAccessor } from '#/utils/line-chart';\n// interface ILineChart {\n//   value: number\n//   time: string\n// }\n// const formatDate = timeFormat('%b %d, %H:%M');\n// const tooltipStyles = {\n//   ...defaultStyles,\n//   background: 'rgba(0, 0, 0, 0.9)',\n//   borderRadius: '4px',\n//   color: 'white',\n// };\n// const bisectDate = bisector<ILineChart, Date>((d) => xAccessor(d)).left;\n// type Props = {\n//   width: number;\n//   height: number;\n// };\n// function LineChart({ width, height, showTooltip, hideTooltip, tooltipData, tooltipLeft, tooltipTop }: Props & any) {\n//   const { margin, boundedWidth, boundedHeight } = getDimensions({ width, height });\n//   const LpValue = 54300.2; \n//   const LatestValue = 59980.9;\n//   const xScale = useMemo(() => scaleTime({\n//     domain: extent(data, xAccessor) as [Date, Date],\n//     range: [0, boundedWidth],\n//     nice: true,\n//   }), [boundedWidth]);\n//   const yScale = useMemo(() => scaleLinear({\n//     domain: extent(data, yAccessor) as [number, number],\n//     range: [boundedHeight, 0],\n//     nice: true,\n//   }), [boundedHeight]);\n//   const handleTooltip = useCallback((event: React.MouseEvent<SVGRectElement>) => {\n//     const { x } = localPoint(event) || { x: 0 };\n//     const x0 = xScale.invert(x);\n//     const index = bisectDate(data, x0, 1);\n//     const d0 = data[index - 1];\n//     const d1 = data[index];\n//     let d = d0;\n//     if (d1 && xAccessor(d1)) {\n//       d = x0.valueOf() - xAccessor(d0).valueOf() > xAccessor(d1).valueOf() - x0.valueOf() ? d1 : d0;\n//     }\n//     showTooltip({\n//       tooltipData: d,\n//       tooltipLeft: x,\n//       tooltipTop: yScale(yAccessor(d)),\n//     });\n//   }, [showTooltip, yScale, xScale]);\n//   const customYPosition = yScale(LpValue); \n//   const yTickValues = yScale.ticks(8);\n//   if (!yTickValues.includes(LpValue)) {\n//     yTickValues.push(LpValue);\n//   }\n//   if (!yTickValues.includes(LatestValue)) {\n//     yTickValues.push(LatestValue);\n//   }\n//   return (\n//     <div className=\"w-fit\">\n//       <svg width={width} height={height} role=\"figure\">\n//         <rect x={0} y={0} width={width} height={height} fill=\"transparent\" />\n//         <Group top={margin.top} left={margin.left}>\n//           <GridRows scale={yScale} width={boundedWidth} strokeDasharray=\"1,3\" stroke=\"#262626\" pointerEvents=\"none\" />\n//           <LinePath\n//             curve={curveLinear}\n//             data={data}\n//             stroke={\"#FFCA43\"}\n//             strokeWidth={1.5}\n//             x={(d) => xScale(xAccessor(d)) ?? 0}\n//             y={(d) => yScale(yAccessor(d)) ?? 0}\n//           />\n//           <Bar\n//             x={0}\n//             y={0}\n//             width={boundedWidth}\n//             height={boundedHeight}\n//             fill=\"transparent\"\n//             onMouseMove={handleTooltip}\n//             onMouseLeave={hideTooltip}\n//           />\n//           {customYPosition && (\n//             <line\n//               x1={0}\n//               x2={boundedWidth}\n//               y1={customYPosition}\n//               y2={customYPosition}\n//               stroke=\"white\"\n//               strokeWidth={1}\n//               strokeDasharray=\"3,5\"\n//             />\n//           )}\n//           <AxisRight\n//             left={boundedWidth + margin.right - 40}\n//             scale={yScale}\n//             top={0}\n//             hideAxisLine={true}\n//             hideTicks={true}\n//             tickValues={yTickValues}\n//             tickFormat={(value) => `${Number(value).toFixed(1)}`}\n//             tickLabelProps={() => ({\n//               fill: '#A6A6A6',\n//               fontSize: 9,\n//               textAnchor: 'start',\n//             })}\n//             tickComponent={({ formattedValue, x, y }) => {\n//               if (formattedValue === undefined) {\n//                 return null; \n//               }\n//               const numFormattedValue = Number(formattedValue); \n//               const isLPValue = numFormattedValue === LpValue;\n//               const isLatestValue = numFormattedValue === LatestValue;\n//               const text = isLPValue\n//                 ? `LP ${LpValue.toFixed(1)}`\n//                 : isLatestValue\n//                 ? `${LatestValue.toFixed(1)}`\n//                 : formattedValue;\n//               const paddingX = 8; \n//               const paddingY = 2; \n//               const fontSize = 9;\n//               const textWidth = text.length * (fontSize * 0.6); // Estimate that each character is ~60% of the font size\n//               const rectWidth = textWidth + paddingX; // Add padding for width\n//               const rectHeight = fontSize + paddingY; // Add padding for height\n//               if (isLPValue) {\n//                 return (\n//                   <g transform={`translate(${x},${y})`}>\n//                     <rect\n//                       x={-rectWidth / 2} \n//                       y={-rectHeight / 2}\n//                       width={rectWidth}\n//                       height={rectHeight}\n//                       fill=\"#4d4d4d\"\n//                       rx={0} \n//                     />\n//                     <text\n//                       fill=\"white\"\n//                       fontSize={fontSize}\n//                       textAnchor=\"middle\"\n//                       dy=\"0.32em\"\n//                       x={0} \n//                     >\n//                       LP {LpValue.toFixed(1)}\n//                     </text>\n//                   </g>\n//                 );\n//               } else if (isLatestValue) {\n//                 return (\n//                   <g transform={`translate(${x},${y})`}>\n//                     <rect\n//                       x={-rectWidth / 2} \n//                       y={-rectHeight / 2}\n//                       width={rectWidth}\n//                       height={rectHeight}\n//                       fill=\"white\"\n//                       rx={0} \n//                     />\n//                     <text\n//                       fill=\"black\"\n//                       fontWeight=\"700\"\n//                       fontSize={fontSize}\n//                       textAnchor=\"middle\"\n//                       dy=\"0.32em\"\n//                       x={0}\n//                     >\n//                       {LatestValue.toFixed(1)}\n//                     </text>\n//                   </g>\n//                 );\n//               } else {\n//                 return (\n//                   <text\n//                     fill=\"#A6A6A6\"\n//                     fontSize={fontSize}\n//                     textAnchor=\"start\"\n//                     dy=\"0.32em\"\n//                     x={-10}\n//                     y={y}\n//                   >\n//                     {text}\n//                   </text>\n//                 );\n//               }\n//             }}\n//           />\n//           <AxisBottom\n//             rangePadding={41}\n//             top={boundedHeight}\n//             hideAxisLine={true}\n//             hideTicks={true}\n//             scale={xScale}\n//             tickFormat={(d) => (d instanceof Date ? timeFormat('%H:%M')(d) : '')}\n//             tickLabelProps={() => ({\n//               fill: 'white',\n//               fontSize: 8,\n//               textAnchor: 'middle',\n//             })}\n//           />\n//         </Group>\n//         {tooltipData && (\n//           <g>\n//             <circle cx={tooltipLeft} cy={tooltipTop+10} r={4} fill=\"white\" stroke=\"black\" strokeWidth={1} />\n//           </g>\n//         )}\n//       </svg>\n//       {tooltipData && (\n//         <div>\n//           <TooltipWithBounds top={tooltipTop} left={tooltipLeft} style={tooltipStyles}>\n//             {`Value: ${yAccessor(tooltipData)}`}\n//           </TooltipWithBounds>\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n// export default withTooltip(LineChart);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/line-chart.tsx\n",
        ),
      );

      /***/
    },
});
